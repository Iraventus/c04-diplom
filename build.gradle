plugins {
    id "java-library"
    id "application"
    id "io.qameta.allure" version "2.8.1"
}

repositories {
    maven { url = "https://dl.bintray.com/qameta/maven-unstable/" }
    mavenCentral()
}

allure {
    autoconfigure = true
    version = "2.13.8"
    useJUnit5 {
        version = "2.13.8"
    }
}

compileTestJava {
    options.encoding = "UTF-8"
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:5.18.0",
            "io.qameta.allure:allure-selenide:2.13.6",
            "org.slf4j:slf4j-simple:1.7.30",
            "org.aspectj:aspectjweaver:1.9.6",
            "org.junit.jupiter:junit-jupiter-api:5.7.0",
            "org.junit.jupiter:junit-jupiter-params:5.7.0",
            "org.aeonbits.owner:owner:1.0.12",
            "io.qameta.allure:allure-ee-junit-platform:3.28.2",
            "com.github.javafaker:javafaker:1.0.2",
            "org.hamcrest:hamcrest-all:1.3")
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
}

tasks.withType(Test) {
    systemProperties += System.properties
    systemProperty("junit.jupiter.extensions.autodetection.enabled", "true")
    System.setProperty("chromeoptions.prefs", "intl.accept_languages=ru")

    if (System.getProperty("threads") != null) {
        systemProperties += [
                "junit.jupiter.execution.parallel.enabled"                 : true,
                "junit.jupiter.execution.parallel.mode.default"            : "concurrent",
                "junit.jupiter.execution.parallel.mode.classes.default"    : "concurrent",
                "junit.jupiter.execution.parallel.config.strategy"         : "fixed",
                "junit.jupiter.execution.parallel.config.fixed.parallelism": System.getProperty("threads").toInteger()
        ]
    }
}

test {
    useJUnitPlatform()
}